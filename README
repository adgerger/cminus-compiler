
Zeynep Erdogru and Dogu Gerger
zerdogru@uoguelph.ca and dgerger@uoguelph.ca

-------
-Message from Zeynep
Code to be updated** 
I (Zeynep Erdogru) am an SAS student and got an extension for 3 days from Professor Song. My team mate Dogu Gerger is submitting this code to show his progress. 
--------

In this package, we provide a SampleParser that builds
a scanner and a parser together with JFlex and CUP. 

Also included are five C- programs from the C-Specification for
convenience during development and testing.

A parser implementation for the C- programming language using JFlex and CUP..

Checkpoint 1 - Code

  To build the parser, type "make" in the current directory, which will 
generate an executable program called "Main".

  To test source code like "booltest.cm", type 

    "java -cp /usr/share/java/cup.jar:. Main test/booltest.cm" 

and the syntax tree will be displayed on the screen.

  To rebuild the parser, type "make clean" and type "make" again.

  Also note that all the abstract syntax tree structures are defined under
the directory "absyn" and the methods for showing a syntax tree is implemented
by the visitor pattern in "ShowTreeVisitor.java".  Since some java files are 
generated automatically, they may contain variables that are not used, which 
can be ignored in the compilation process.


